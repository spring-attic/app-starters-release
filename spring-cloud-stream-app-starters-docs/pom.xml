<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.cloud.stream.app</groupId>
		<artifactId>app-starters-release-train-build</artifactId>
		<version>Bacon.BUILD-SNAPSHOT</version>
	</parent>
	<artifactId>spring-cloud-stream-app-starters-docs</artifactId>
	<name>spring-cloud-stream-app-starters-docs</name>
	<description>Spring Cloud Stream App Starters Docs</description>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>app-starters-annotation-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>app-starters-file-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>app-starters-ftp-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>app-starters-trigger-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>app-starters-trigger-one-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>app-starters-trigger-unlimited-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>app-starters-time-common</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-file</artifactId>
			<version>${spring-cloud-starter-stream-file.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-file</artifactId>
			<version>${spring-cloud-starter-stream-file.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-log</artifactId>
			<version>${spring-cloud-starter-stream-log.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-time</artifactId>
			<version>${spring-cloud-starter-stream-time.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-httpclient</artifactId>
			<version>${spring-cloud-starter-stream-httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-task-launcher-cloudfoundry</artifactId>
			<version>${spring-cloud-starter-stream-tasklauncher-cloudfoundry.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-task-launcher-yarn</artifactId>
			<version>${spring-cloud-starter-stream-tasklauncher-yarn.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-task-launcher-local</artifactId>
			<version>${spring-cloud-starter-stream-tasklauncher-local.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-throughput</artifactId>
			<version>${spring-cloud-starter-stream-throughput.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-redis</artifactId>
			<version>${spring-cloud-starter-stream-redis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-splitter</artifactId>
			<version>${spring-cloud-starter-stream-splitter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-scriptable-transform</artifactId>
			<version>${spring-cloud-starter-stream-scriptable-transform.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-pmml</artifactId>
			<version>${spring-cloud-starter-stream-pmml.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-groovy-transform</artifactId>
			<version>${spring-cloud-starter-stream-groovy-transform.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-groovy-filter</artifactId>
			<version>${spring-cloud-starter-stream-groovy-filter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-filter</artifactId>
			<version>${spring-cloud-starter-stream-filter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-triggertask</artifactId>
			<version>${spring-cloud-starter-stream-triggertask.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-trigger</artifactId>
			<version>${spring-cloud-starter-stream-trigger.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-syslog</artifactId>
			<version>${spring-cloud-starter-stream-syslog.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-mongodb</artifactId>
			<version>${spring-cloud-starter-stream-mongodb.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-mail</artifactId>
			<version>${spring-cloud-starter-stream-mail.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-loggregator</artifactId>
			<version>${spring-cloud-starter-stream-loggregator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>aws-s3-app-starters-common</artifactId>
			<version>${spring-cloud-starter-stream-aws-s3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-s3</artifactId>
			<version>${spring-cloud-starter-stream-aws-s3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-s3</artifactId>
			<version>${spring-cloud-starter-stream-aws-s3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-load-generator</artifactId>
			<version>${spring-cloud-starter-stream-loadgenerator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>tcp-app-starters-common</artifactId>
			<version>${spring-cloud-starter-stream-tcp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-tcp</artifactId>
			<version>${spring-cloud-starter-stream-tcp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-tcp</artifactId>
			<version>${spring-cloud-starter-stream-tcp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-tcp-client</artifactId>
			<version>${spring-cloud-starter-stream-tcp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-tcp-client</artifactId>
			<version>${spring-cloud-starter-stream-tcp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-gpfdist</artifactId>
			<version>${spring-cloud-starter-stream-gpfdist.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-router</artifactId>
			<version>${spring-cloud-starter-stream-router.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-bridge</artifactId>
			<version>${spring-cloud-starter-stream-bridge.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-rabbit</artifactId>
			<version>${spring-cloud-starter-stream-rabbit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-rabbit</artifactId>
			<version>${spring-cloud-starter-stream-rabbit.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-jms</artifactId>
			<version>${spring-cloud-starter-stream-jms.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-field-value-counter</artifactId>
			<version>${spring-cloud-starter-stream-fieldvaluecounter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-aggregate-counter</artifactId>
			<version>${spring-cloud-starter-stream-aggregatecounter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-counter</artifactId>
			<version>${spring-cloud-starter-stream-counter.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-jdbc</artifactId>
			<version>${spring-cloud-starter-stream-jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-jdbc</artifactId>
			<version>${spring-cloud-starter-stream-jdbc.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-sftp</artifactId>
			<version>${spring-cloud-starter-stream-sftp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-sftp</artifactId>
			<version>${spring-cloud-starter-stream-sftp.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-ftp</artifactId>
			<version>${spring-cloud-starter-stream-ftp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-ftp</artifactId>
			<version>${spring-cloud-starter-stream-ftp.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-websocket</artifactId>
			<version>${spring-cloud-starter-stream-websocket.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-hdfs</artifactId>
			<version>${spring-cloud-starter-stream-hdfs.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-hdfs-dataset</artifactId>
			<version>${spring-cloud-starter-stream-hdfs.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-cassandra</artifactId>
			<version>${spring-cloud-starter-stream-cassandra.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-common-gemfire</artifactId>
			<version>${spring-cloud-starter-stream-gemfire.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-gemfire</artifactId>
			<version>${spring-cloud-starter-stream-gemfire.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-sink-gemfire</artifactId>
			<version>${spring-cloud-starter-stream-gemfire.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-gemfire-cq</artifactId>
			<version>${spring-cloud-starter-stream-gemfire.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>twitterstream-app-starters-common</artifactId>
			<version>${spring-cloud-starter-stream-twitterstream.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-twitterstream</artifactId>
			<version>${spring-cloud-starter-stream-twitterstream.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-source-http</artifactId>
			<version>${spring-cloud-starter-stream-http.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-header-enricher</artifactId>
			<version>${spring-cloud-starter-stream-processor-header-enricher.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-aggregator</artifactId>
			<version>${spring-cloud-starter-stream-aggregator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud.stream.app</groupId>
			<artifactId>spring-cloud-starter-stream-processor-tensorflow</artifactId>
			<version>${spring-cloud-starter-stream-tensorflow.version}</version>
		</dependency>

	</dependencies>
	<profiles>
		<profile>
			<id>full</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<includeDependencySources>true</includeDependencySources>
									<dependencySourceIncludes>
										<dependencySourceInclude>${project.groupId}:*</dependencySourceInclude>
									</dependencySourceIncludes>
									<attach>false</attach>
									<quiet>true</quiet>
									<stylesheetfile>${basedir}/src/main/javadoc/spring-javadoc.css</stylesheetfile>
									<links>
										<link>http://docs.spring.io/spring-framework/docs/${spring.version}/javadoc-api/</link>
										<link>http://docs.spring.io/spring-shell/docs/current/api/</link>
									</links>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<id>generate-docbook</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDocumentName>index.adoc</sourceDocumentName>
									<backend>docbook5</backend>
									<doctype>book</doctype>
									<attributes>
										<docinfo>true</docinfo>
										<project-version>${project.version}</project-version>
										<project-artifactId>${project.artifactId}</project-artifactId>
										<app-starters-build-version>${app-starters-build.version}</app-starters-build-version>
										<allow-uri-read>true</allow-uri-read>
										<attribute-missing>warn</attribute-missing>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.agilejava.docbkx</groupId>
						<artifactId>docbkx-maven-plugin</artifactId>
						<version>2.0.15</version>
						<configuration>
							<sourceDirectory>${basedir}/target/generated-docs</sourceDirectory>
							<imgSrcPath />
							<graphicsize.extension>0</graphicsize.extension>
							<includes>index.xml</includes>
							<xincludeSupported>true</xincludeSupported>
							<chunkedOutput>false</chunkedOutput>
							<foCustomization>${basedir}/src/main/docbook/xsl/pdf.xsl</foCustomization>
							<useExtensions>1</useExtensions>
							<admonGraphics>1</admonGraphics>
							<highlightSource>1</highlightSource>
							<highlightXslthlConfig>${basedir}/src/main/docbook/xsl/xslthl-config.xml</highlightXslthlConfig>
							<preProcess>
								<copy todir="${basedir}/target/generated-docs/images">
									<fileset dir="${basedir}/src/main/docbook/images" />
								</copy>
							</preProcess>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>net.sf.xslthl</groupId>
								<artifactId>xslthl</artifactId>
								<version>2.1.0</version>
							</dependency>
							<dependency>
								<groupId>net.sf.docbook</groupId>
								<artifactId>docbook-xml</artifactId>
								<version>5.0-all</version>
								<classifier>resources</classifier>
								<type>zip</type>
								<scope>runtime</scope>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>html-single</id>
								<goals>
									<goal>generate-html</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<htmlCustomization>${basedir}/src/main/docbook/xsl/html-singlepage.xsl</htmlCustomization>
									<targetDirectory>${basedir}/target/docbook/htmlsingle</targetDirectory>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference/htmlsingle">
											<fileset dir="${basedir}/target/docbook/htmlsingle">
												<include name="**/*.html" />
											</fileset>
										</copy>
										<copy todir="${basedir}/target/contents/reference/htmlsingle/images">
											<fileset dir="${basedir}/target/generated-docs/images" />
										</copy>
										<copy todir="${basedir}/target/contents/reference/htmlsingle/css">
											<fileset dir="${basedir}/src/main/docbook/css" />
										</copy>
									</postProcess>
								</configuration>
							</execution>
							<execution>
								<id>html</id>
								<goals>
									<goal>generate-html</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<htmlCustomization>${basedir}/src/main/docbook/xsl/html-multipage.xsl</htmlCustomization>
									<targetDirectory>${basedir}/target/docbook/html</targetDirectory>
									<chunkedOutput>true</chunkedOutput>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference/html">
											<fileset dir="${basedir}/target/docbook/html">
												<include name="**/*.html" />
											</fileset>
										</copy>
										<copy todir="${basedir}/target/contents/reference/html/images">
											<fileset dir="${basedir}/target/generated-docs/images" />
										</copy>
										<copy todir="${basedir}/target/contents/reference/html/css">
											<fileset dir="${basedir}/src/main/docbook/css" />
										</copy>
									</postProcess>
								</configuration>
							</execution>
							<execution>
								<id>pdf</id>
								<goals>
									<goal>generate-pdf</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<foCustomization>${basedir}/src/main/docbook/xsl/pdf.xsl</foCustomization>
									<targetDirectory>${basedir}/target/docbook/pdf</targetDirectory>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference">
											<fileset dir="${basedir}/target/docbook">
												<include name="**/*.pdf" />
											</fileset>
										</copy>
										<move file="${basedir}/target/contents/reference/pdf/index.pdf" tofile="${basedir}/target/contents/reference/pdf/spring-cloud-stream-app-starters-reference.pdf" />
									</postProcess>
								</configuration>
							</execution>
							<execution>
								<id>epub</id>
								<goals>
									<goal>generate-epub3</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<epubCustomization>${basedir}/src/main/docbook/xsl/epub.xsl</epubCustomization>
									<targetDirectory>${basedir}/target/docbook/epub</targetDirectory>
									<preProcess>
										<copy todir="${basedir}/target/docbook/epub/images">
											<fileset dir="${basedir}/src/main/docbook/images" />
											<fileset dir="${basedir}/src/main/asciidoc/images" />
										</copy>
									</preProcess>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference/epub">
											<fileset dir="${basedir}/target/docbook">
												<include name="**/*.epub" />
											</fileset>
										</copy>
										<move file="${basedir}/target/contents/reference/epub/index.epub" tofile="${basedir}/target/contents/reference/epub/spring-cloud-stream-app-starters-reference.epub" />
									</postProcess>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>1.8.1</version>
							</dependency>
							<dependency>
								<groupId>org.tigris.antelope</groupId>
								<artifactId>antelopetasks</artifactId>
								<version>3.2.10</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>package-and-attach-docs-zip</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<zip destfile="${project.build.directory}/${project.artifactId}-${project.version}.zip">
											<zipfileset src="${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar" prefix="api" />
											<fileset dir="${project.build.directory}/contents" />
										</zip>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>setup-maven-properties</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<exportAntProperties>true</exportAntProperties>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
										<taskdef name="stringutil" classname="ise.antelope.tasks.StringUtilTask" />
										<var name="version-type" value="${project.version}" />
										<propertyregex property="version-type" override="true" input="${version-type}" regexp=".*\.(.*)" replace="\1" />
										<propertyregex property="version-type" override="true" input="${version-type}" regexp="(M)\d+" replace="MILESTONE" />
										<propertyregex property="version-type" override="true" input="${version-type}" regexp="(RC)\d+" replace="MILESTONE" />
										<propertyregex property="version-type" override="true" input="${version-type}" regexp="BUILD-(.*)" replace="SNAPSHOT" />
										<stringutil string="${version-type}" property="spring-boot-repo">
											<lowercase />
										</stringutil>
										<var name="github-tag" value="v${project.version}" />
										<propertyregex property="github-tag" override="true" input="${github-tag}" regexp=".*SNAPSHOT" replace="master" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9.1</version>
						<executions>
							<execution>
								<id>attach-zip</id>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${project.build.directory}/${project.artifactId}-${project.version}.zip</file>
											<type>zip;zip.type=docs;zip.deployed=false</type>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
